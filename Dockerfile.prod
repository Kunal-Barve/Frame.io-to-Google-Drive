### Production Dockerfile for Cloud Run deployment
### Multi-stage build for Frame.io to Google Drive Automation

# Stage 1: Builder - install dependencies and prepare the app
FROM python:3.12-slim AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt


# Stage 2: Runtime - lightweight image with only necessary components
FROM python:3.12-slim

# Set working directory
WORKDIR /app

# Install system deps for Playwright and basic utilities
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    ca-certificates \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libx11-xcb1 \
    libxcomposite1 \
    libxdamage1 \
    libxrandr2 \
    xdg-utils \
    --no-install-recommends && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy Python deps from builder
COPY --from=builder /root/.local /root/.local
ENV PATH=/root/.local/bin:$PATH

# Ensure Playwright installs browsers to a known location
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0

# Create and set permissions for the Playwright browser directory
RUN mkdir -p /ms-playwright && chmod 777 /ms-playwright

# Copy application code
COPY . /app/

# Install Playwright package and download browsers
RUN pip install --no-cache-dir playwright \
  && playwright install chromium \
  && playwright install-deps chromium \
  # Verify that a chromium binary exists under the browsers path
  && ls -la /ms-playwright/*/chrome-linux/chrome \
  && echo "âœ… Browser found at expected path"

# Create directories for tmp storage and logs
RUN mkdir -p /app/tmp/downloads /app/tmp/processing /app/logs \
  && chmod -R 755 /app/tmp /app/logs

# Set environment variables for runtime
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8080
ENV DISPLAY=:99

# Expose port for Cloud Run
EXPOSE 8080

# Health check (Cloud Run will call /health endpoint)
HEALTHCHECK --interval=30s --timeout=5s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Start the application
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8080"]
