version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: frame-to-drive
    restart: unless-stopped
    # Add explicit command to override the Dockerfile CMD
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    # Not exposing the app directly to the outside world
    # Instead, we'll use nginx as a reverse proxy
    expose:
      - 8000
    volumes:
      # Mount service account file from host to container
      - ./credentials/bunsters_service_account.json:/credentials/bunsters_service_account.json:ro
      # Mount tmp directories for persistence
      - ${DATA_PATH:-./tmp}/downloads:/app/tmp/downloads
      - ${DATA_PATH:-./tmp}/processing:/app/tmp/processing
      # Mount logs directory
      - ${LOG_PATH:-./logs}:/app/logs
    environment:
      # FastAPI Configuration
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      
      # Frame.io Authentication
      - FRAME_IO_EMAIL=${FRAME_IO_EMAIL}
      - FRAME_IO_PASSWORD=${FRAME_IO_PASSWORD}
      
      # Google Drive API Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost:8000/oauth2callback}
      - GOOGLE_SERVICE_ACCOUNT_FILE=/credentials/bunsters_service_account.json
      
      # Google Drive Storage
      - GOOGLE_DRIVE_FOLDER_ID=${GOOGLE_DRIVE_FOLDER_ID}
      
      # File Management
      - TEMP_DOWNLOAD_DIR=/app/tmp/downloads
      - TEMP_PROCESSING_DIR=/app/tmp/processing
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-5000}
      - DOWNLOAD_TIMEOUT_SECONDS=${DOWNLOAD_TIMEOUT_SECONDS:-300}
      
      # Security
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - frame-to-drive-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  nginx:
    image: nginx:stable-alpine
    container_name: frame-to-drive-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - frame-to-drive-network

networks:
  frame-to-drive-network:
    driver: bridge

# Create named volumes for data persistence (optional)
volumes:
  downloads:
  processing:
  logs:
